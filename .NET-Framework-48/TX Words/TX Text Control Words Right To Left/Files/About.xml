<?xml version="1.0"?>
<?xml-stylesheet type="text/css" href="about.css"?>
<!DOCTYPE chap SYSTEM "about.dtd"[]>
<chap>
  <chap_hl>This Right to Left Sample</chap_hl>
  <chap_desc>
    <apiname>Text Control</apiname> supports right to left text rendering for languages such as Arabic or Hebrew. Most often, users working with "RTL languages", also prefer an application view with a right-to-left orientation. This sample shows how to implement a button that restarts the program in the opposite application view.</chap_desc>
  <chap_desc />
  <article>
    <ref_hl>Using this Sample</ref_hl>
    <ref_desc>To change the application view, click the <apiname>Right to Left</apiname> button. It opens a message box where the user can confirm the view change by restarting the program. After the application is restarted, the orientation of the sample is changed to right to left.</ref_desc>
    <ref_desc />
  </article>
  <article>
    <ref_hl>The Code Behind</ref_hl>
    <ref_desc>When clicking the <apiname>Right to Left</apiname> button, the requested layout will be saved as <apiname>Settings</apiname> property value before the application is restarted.</ref_desc>
    <cs_code>
      <code_line>private void RightToLeftFormLayout_Click(object sender, System.EventArgs e) {</code_line>
      <code_line>        bool bIsRightToLeft = (bool)(sender as RibbonButton).Tag;</code_line>
      <code_line>        if (SaveDirtyDocumentBeforeReset(bIsRightToLeft)) {</code_line>
      <code_line>                Properties.Settings.Default.RightToLeft = bIsRightToLeft ? RightToLeft.No : RightToLeft.Yes;</code_line>
      <code_line>                SaveRecentFiles();</code_line>
      <code_line>                Application.Restart();</code_line>
      <code_line>        }</code_line>
      <code_line>}</code_line>
    </cs_code>
    <ref_desc />
    <ref_desc>After that, this layout is loaded when the application is initialized for restart.</ref_desc>
    <cs_code>
      <code_line>public MainWindow() {</code_line>
      <code_line>        InitializeComponent();</code_line>
      <code_line>        // Get and set saved application settings.</code_line>
      <code_line>        LoadRightToLeftSettings();</code_line>
      <code_line>        LoadRecentFiles();</code_line>
      <code_line>}</code_line>
    </cs_code>
    <ref_desc />
    <ref_desc>It updates both the <apiname>RightToLeftLayout</apiname> property value of the application and that of the ribbon.</ref_desc>
    <cs_code>
      <code_line>private void LoadRightToLeftSettings() {</code_line>
      <code_line>        this.RightToLeftLayout =</code_line>
      <code_line>        m_rbnRibbon.RightToLeftLayout = (this.RightToLeft = Properties.Settings.Default.RightToLeft) == RightToLeft.Yes;</code_line>
      <code_line>}</code_line>
    </cs_code>
    <ref_desc />
  </article>
  <article>
    <ref_hl>Support</ref_hl>
    <ref_desc>The <apiname>Text Control Support</apiname> section offers links to all technical resources related to <apiname>Text Control</apiname>, including documentation, getting started guides, FAQs and links to interesting blog articles.</ref_desc>
    <ref_desc>Contact us:</ref_desc>
    <ref_desc>
      <link href="https://www.textcontrol.com/support/overview/">https://www.textcontrol.com/support/overview/</link>
    </ref_desc>
    <ref_desc />
  </article>
</chap>